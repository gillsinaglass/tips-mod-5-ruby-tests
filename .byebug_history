exit
@start.advance(days: @interval * (date-@start).to_int)
@start.advance(days: @interval * (date-@start).to_int
@start
date
next
@start
date
@start.advance(days: @interval * (date-@start).to_int)
current 
next
current
next
exit
current.end_of_month.day
current = @start.advance(days: @interval * (counter * (date-@start).to_int))
@period
@interval
date
current 
next
@interval
date
current
next
current = @start.advance(days: @interval * (counter * (date-@start).to_int))
exit
nextexit
next
thing
next
thing
next
thing
next
thing
next
thing
next
thing
next
thing
next
thing
next
exit
next
exit
counter
exit
thing
next
thing
next
thing
exit
thing.to_int
thing
@start
exit
@start.to_time += thing.to_s.to_time
@start + thing.to_s.to_time
thing.to_s.to_time
thing.to_s
thing.to_str
thing.to_string
thing
exit
next
current != date
exit
next
exit
next
exit
next
exit
next
@start = @start.advance(days: 1)
@start.advance(days: 1)
@start
next
current
@start
next
current != date
current 
exit
next
exit
next
exit
current != date
current = date
current = datee
current != date
@period
exit
current
next
exit
current == date
current = @start.advance(days: +1)
date
current
curtrent
next
exit
@start.class
date.class
type(date)
date.type_of
type_of
date
@date
exit
@start
date
current
next
exit
@period == 'daily'
@period
next
exit
current <= date
exit
@current == date
@current = @current.advance(days: +@interval)
date
@current
exit
@current
exit
@current
@current = @current.advance(days: +@interval)
@period == "daily"
@current == date
exit
a == date
a = current.advance(days: +@interval)
@interval
@period
current
date
exit
current 
date
@date
exit
date
a == date
a = current.advance(days: +@interval).to_time
current.advance(days: +@interval).to_time
current.advance(days: +@interval).to_time == date
current.advance(days: +@interval).to_time
current.advance(days: +@interval)
date.to_time
current.to_time
current 
exit
end
current == date
current = current.advance(days: +@interval)
@period == "daily"
@period == daily
next
@period == "weekly"
next
@period == "monthly"
next
exit
current != date
current < date
date
current
exit
current == date
current = current.advance(days: +@interval)
current == date
current.advance(days: +@interval)
current
exit
current 
@period
exit
@period
current
exit
next
exit
current.advance(days: +@interval) == date
current.advance(days: +1) == date
@interval 
current.advance(days: +1)
@period
date
current
